@page "/events/create"

@inject CreatEventService CreatEventService

@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

<h3>Create Event</h3>

<EditForm Model="_eventViewModel" OnValidSubmit="CreateEvent">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="Title">Title</label>
        <InputText id="Title" class="form-control" @bind-Value="_eventViewModel.Title" />
        <ValidationMessage For="@(() => _eventViewModel.Title)"></ValidationMessage>
    </div>

    <div class="form-group">
        <label for="Description">Description</label>
        <InputTextArea id="Description" class="form-control" @bind-Value="_eventViewModel.Description" />
        <ValidationMessage For="@(() => _eventViewModel.Description)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="Date">Begin Date</label>
        <InputDate id="Date" class="form-control" @bind-Value="_eventViewModel.BeginDate" />
        <ValidationMessage For="@(() => _eventViewModel.BeginDate)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="Date">Begin Time</label>
        <input type="time" id="Date" class="form-control" @bind-value="_eventViewModel.BeginTime" />
        <ValidationMessage For="@(() => _eventViewModel.BeginTime)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="EndDate">End Date</label>
        <InputDate id="EndDate" class="form-control" @bind-Value="_eventViewModel.EndDate" />
        <ValidationMessage For="@(() => _eventViewModel.EndDate)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="Date">End Time</label>
        <input type="time" id="Date" class="form-control" @bind-value="_eventViewModel.EndTime" />
        <ValidationMessage For="@(() => _eventViewModel.EndTime)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="Location">Venue Address</label>
        <InputText id="Location" class="form-control" @bind-Value="_eventViewModel.Location" />
        <ValidationMessage For="@(() => _eventViewModel.Location)"></ValidationMessage>
    </div>
    <br />  
    <button type="submit" class="btn btn-primary">Create</button>
    &nbsp;
    <NavLink class="btn btn-secondary" href="/">Cancel</NavLink>
</EditForm>

@code {
    private EventViewModel _eventViewModel = new EventViewModel();

    private string? errorMessage = string.Empty;

    private void CreateEvent()
    {

        errorMessage = CreatEventService.ValidateEvent(_eventViewModel);

    }
}
