@page "/"


@inject ViewCreatedEventsService ViewCreatedEventsService

<h3>Created Events</h3>

@if (_createdEvents is not null && _createdEvents.Count > 0)
{
    <table class="table table-striped">
        <thead>
            <tr>

                <th style ="text-align:center">Title</th>
                <th>Begin Date Time</th>
                <th>End Date Time</th>
                <th>Capacity</th>
                
            </tr>
        </thead>
        <tbody>
            @foreach (var createdEvent in _createdEvents)
            {
                <tr>
                    <td style="text-align:center">
                        @{
                            var eventImage = createdEvent.ImageUrl; 
                            if (string.IsNullOrWhiteSpace(eventImage))
                            {
                                eventImage = "/images/image-placeholder.png"; // Placeholder image URL
                            }
                          
                            <img src="@eventImage" alt="Event Image" style="width: 100px; height: 59px;" />
                        }
                        <br />
                        @createdEvent.Title
                    </td>
                    
                    <td>@createdEvent.BeginDate @createdEvent.BeginTime</td>
                    <td>@createdEvent.EndDate @createdEvent.EndTime</td>
                    <td>
                        @{
                            if (createdEvent.Capacity == 0)
                            {
                                <span>Unlimited</span>
                            }
                            else
                            {
                                <span>@createdEvent.Capacity</span>
                            }
                        }
                       
                    </td>
                    
                </tr>
            }
        </tbody>
    </table>
}

<a href="/events/create" class="btn btn-primary">Create New Meetup</a>

@code {

    private List<EventViewModel> _createdEvents = new List<EventViewModel>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _createdEvents = await ViewCreatedEventsService.GetEventsAsync();
            StateHasChanged();
        }
    }
    
}
